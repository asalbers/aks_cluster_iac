# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
# *.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc


ansible-advancedlinux/Ansible_ARM.ps1
apprenda60-express/provisionApprendaTestScript.ps1
apprenda60-small/provisionApprendaTestScript.ps1
apprenda60-express/provisionApprendaTestScript.ps1

# local template parameters
**/azuredeploy.parameters.local.json
**/azuredeploy.parameters.dev.json
**/azuredeploy.parameters.?.json
**/prereq.azuredeploy.parameters.?.json
**/prereq.azuredeploy.parameters.dev.json

# secrets
**/*.pfx
**/*.cer

# Visual Studio autosaves
.vs

# emacs autosaves
auto-save-list
custom.el
url/
.org-id-locations
\#*
org-mode-config.el
*~
.#*
\#*\#
*.log
.DS_Store
org-clock-save.el
emacs-config.el
.vscode
node_modules
Nese_OMS_NEstedforOMSWS.json
test/template-validation-tests/package-lock.json
test/template-validation-tests/mochawesome-report/*

test/AzTemplateToolKit.zip
test/arm-template-toolkit.zip
test/ci-scripts/azuredeploy.parameters.new.json
test/ci-scripts/Kill-Kill.ps1

quickstarts/microsoft.customproviders/custom-rp-with-function/src/obj/**

# python 
*.pyc

# golang
bin/
/.vscode/